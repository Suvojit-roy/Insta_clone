[{"D:\\Cv Projects\\Insta clone\\client\\src\\App.js":"1","D:\\Cv Projects\\Insta clone\\client\\src\\components\\Navbar.js":"2","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Home.js":"3","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Profile.js":"4","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Signup.js":"5","D:\\Cv Projects\\Insta clone\\client\\src\\reportWebVitals.js":"6","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Signin.js":"7","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Createpost.js":"8","D:\\Cv Projects\\Insta clone\\client\\src\\index.js":"9","D:\\Cv Projects\\Insta clone\\client\\src\\reducers\\userReducer.js":"10","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\UserProfile.js":"11","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Subsuserposts.js":"12"},{"size":1825,"mtime":1606751195334,"results":"13","hashOfConfig":"14"},{"size":3749,"mtime":1607187186832,"results":"15","hashOfConfig":"14"},{"size":5374,"mtime":1607182554943,"results":"16","hashOfConfig":"14"},{"size":4433,"mtime":1607182152427,"results":"17","hashOfConfig":"14"},{"size":3788,"mtime":1606892409469,"results":"18","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"14"},{"size":2423,"mtime":1606369643935,"results":"20","hashOfConfig":"14"},{"size":2820,"mtime":1606322083390,"results":"21","hashOfConfig":"14"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"14"},{"size":536,"mtime":1606900498083,"results":"23","hashOfConfig":"14"},{"size":4822,"mtime":1607195970621,"results":"24","hashOfConfig":"14"},{"size":5365,"mtime":1606751070528,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e2v7ej",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Cv Projects\\Insta clone\\client\\src\\App.js",["57","58","59"],"D:\\Cv Projects\\Insta clone\\client\\src\\components\\Navbar.js",[],"D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Home.js",["60","61","62","63","64","65"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([]);\r\n    const {state,dispatch}=useContext(UserContext)\r\n   \r\n    useEffect(() => {\r\n        fetch(\"/allpost\", {\r\n            headers: {\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                // console.log(result.posts);\r\n                setData(result.posts);\r\n            });\r\n    }, []);\r\n\r\n    const likePost=(id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",  \r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result)\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newdata);\r\n        })\r\n        \r\n        \r\n    }\r\n    const unlikePost=(id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",  \r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result)\r\n            const newdata=data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }\r\n                else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newdata);\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n           })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n  }\r\n\r\n  const deletePost=(postid)=>{\r\n      fetch(`/deletepost/${postid}`,{\r\n          method:\"delete\",\r\n          headers:{\r\n              Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n          }\r\n      }).then(res=>res.json())\r\n      .then(result=>{\r\n          console.log(result)\r\n          const newData=data.filter( item =>{\r\n              return (item._id !=result._id)\r\n          })\r\n          setData(newData)\r\n      })\r\n  }\r\n\r\n    return data.map((item) => {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"card home-card\" key={item.postedBy._id}>\r\n                    <h5><Link to={item.postedBy._id===state._id?'/profile':'/profile/'+item.postedBy._id}>{item.postedBy.name}</Link>{item.postedBy._id===state._id&&<i style={{float:\"right\"}} className=\"material-icons\" onClick={e=>deletePost(item._id)}>delete</i>}</h5>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.photo} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <i className=\"material-icons\" style={{ color: \"red\" }}>\r\n                            favorite\r\n                        </i>\r\n                        {item.likes.includes(state._id)\r\n                        ?\r\n                        <i className=\"material-icons\" onClick={e=>unlikePost(item._id)}>thumb_down</i>\r\n                        :\r\n                        <i className=\"material-icons\" onClick={e=>likePost(item._id)}>thumb_up</i>}\r\n                        \r\n                        \r\n                        <h6>{item.likes.length} likes</h6>\r\n                        <h6>{item.title}</h6>\r\n                        <p>{item.body}</p>\r\n                        {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span>{record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                        <form onSubmit={e=>{\r\n                            e.preventDefault();\r\n                            makeComment(e.target[0].value,item._id)\r\n                        }}>\r\n                        <input type=\"text\" placeholder=\"comment\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    });\r\n};\r\n\r\nexport default Home;\r\n","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Profile.js",["66","67","68"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nconst Profile=()=>{\r\n\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage]=useState(\"\")\r\n    // const [url,setUrl]=useState(null)\r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result)\r\n            \r\n            setPics(result.mypost)\r\n            // console.log(state)\r\n        })\r\n     },[])\r\n\r\n     useEffect(()=>{\r\n        if(image){\r\n        const data=new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"instagramhere\")\r\n        data.append(\"cloud_name\",\"roy123\")\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/roy123/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            // console.log(data)\r\n            // setUrl(data.url)\r\n            // localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\r\n            // dispatch({type:\"UPDATEPIC\",payload:data.url})\r\n            fetch('/updatepic',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                    \"content-Type\":\"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    pic:data.url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result)\r\n                localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n                dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n                window.location.reload()\r\n            })\r\n\r\n            // window.location.reload()\r\n            \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n        }\r\n     },[image])\r\n     \r\n     const updatephoto=(file)=>{\r\n        setImage(file)\r\n        \r\n     }\r\n    \r\n    return(\r\n        <>\r\n        <div style={{maxWidth:\"90%\",margin:\"0 auto\"}}>\r\n            <div  style={{display:\"flex\",justifyContent:\"space-around\",margin:\"18px 0px\",borderBottom:\"1px solid grey\"}}>\r\n\r\n                <div  style={{display:\"flex\",justifyContent:\"space-around\",flexDirection:\"column\"}}>\r\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                    src={state?state.pic:\"loading\"}/>\r\n                    \r\n                    <div className=\"file-field input-field\">\r\n                        <div className=\"btn\">\r\n                            <span>Update pic</span>\r\n                            <input type=\"file\" onChange={(e)=>updatephoto(e.target.files[0])}/>\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n                   <button className=\"btn waves-effect waves-light\"  style={{margin:\"19px\"}}>\r\n                    <Link style={{color:\"white\"}} to=\"/create\"><span style={{color:\"white\"}}>Add Post</span></Link>\r\n                    </button> \r\n                    \r\n                    \r\n\r\n               </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n            {mypics.map(item=>{\r\n                return <img key={item._id} className=\"item card\" src={item.photo} alt={item.title} style={{maxWidth:\"33rem\",maxHeight:\"33rem\",justifyContent:\"space-between\"}}/>\r\n            })}\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Profile;","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Signup.js",["69"],"D:\\Cv Projects\\Insta clone\\client\\src\\reportWebVitals.js",[],["70","71"],"D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Signin.js",["72","73"],"D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Createpost.js",["74"],"import React,{useEffect, useState} from 'react'\r\nimport M from 'materialize-css'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Createpost= ()=>{\r\n\r\n    const [title,setTitle]=useState(\"\")\r\n    const [body,setBody]=useState(\"\")\r\n    const [image,setImage]=useState(\"\")\r\n    const [url,setUrl]=useState(\"\")\r\n    const history=useHistory()\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic:url\r\n\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n        \r\n            if(data.error){\r\n                return M.toast({html:data.error,classes:\"#f44336 red\"});\r\n            }\r\n            else{\r\n                M.toast({html:\"Post created successfully\",classes:\"#1de9b6 teal accent-3\"});\r\n                history.push(\"/\")\r\n            }\r\n                \r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n\r\n    }\r\n    },[url])\r\n\r\n    const postDetails=()=>{\r\n        const data=new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"instagramhere\")\r\n        data.append(\"cloud_name\",\"roy123\")\r\n\r\n        fetch(\"https://api.cloudinary.com/v1_1/roy123/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"card input-filed auth-card\"\r\n        // style={{\r\n        //     margin:\"10px auto\",\r\n        //     maxWidth:\"500px\",\r\n        //     padding:\"20px\",\r\n        //     textAlign:\"center\"\r\n        // }}\r\n        >\r\n            <input type=\"text\" placeholder=\"title\" value={title} onChange={e=>{setTitle(e.target.value)}}/>\r\n            <input type=\"text\" placeholder=\"body\" value={body} onChange={e=>{setBody(e.target.value)}}/>\r\n\r\n            <div className=\"file-field input-field\">\r\n            <div className=\"btn\">\r\n                <span>Upload Image</span>\r\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\"/>\r\n            </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1\" onClick={postDetails}>\r\n                    Submit Post\r\n            </button> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Createpost","D:\\Cv Projects\\Insta clone\\client\\src\\index.js",[],["75","76"],"D:\\Cv Projects\\Insta clone\\client\\src\\reducers\\userReducer.js",["77","78"],"export const initialState=null\r\n\r\nexport const reducer=(state,action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type===\"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type===\"UPDATEPIC\"){\r\n        return{\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    return state;\r\n}","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\UserProfile.js",["79","80","81"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst UserProfile=()=>{\r\n\r\n    \r\n    const [userProfile,setProfile]=useState(null)\r\n    const {state,dispatch}=useContext(UserContext)\r\n    const {userid}=useParams()\r\n    const [showfollow,setShowfollow]=useState(state?!state.following.includes(userid):true)\r\n    // console.log(userid);\r\n    \r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result) \r\n            \r\n            setProfile(result)\r\n        })\r\n     },[])\r\n\r\n     const followUser=()=>{\r\n         fetch('/follow',{\r\n             method:\"put\",\r\n             headers:{\r\n                 \"Content-Type\":\"application/json\",\r\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n             },\r\n             body:JSON.stringify({\r\n                 followId:userid\r\n             })\r\n         }).then(res=>res.json())\r\n         .then(data=>{\r\n             console.log(data);\r\n             dispatch({\"type\":\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n             setProfile((prevState)=>{\r\n                 return{\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:[...prevState.user.followers,data._id]\r\n                     }\r\n                 }\r\n             })\r\n             setShowfollow(false);  \r\n         })\r\n     }\r\n     const unfollowUser=()=>{\r\n         fetch('/unfollow',{\r\n             method:\"put\",\r\n             headers:{\r\n                 \"Content-Type\":\"application/json\",\r\n                 \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n             },\r\n             body:JSON.stringify({\r\n                 unfollowId:userid\r\n             })\r\n         }).then(res=>res.json())\r\n         .then(data=>{\r\n             console.log(data);\r\n             dispatch({\"type\":\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n             localStorage.setItem(\"user\",JSON.stringify(data))\r\n             setProfile((prevState)=>{\r\n                 const newfollower=prevState.user.followers.filter(item=>{\r\n                     return (item!=data._id)\r\n                 })\r\n                 return{\r\n                     ...prevState,\r\n                     user:{\r\n                         ...prevState.user,\r\n                         followers:newfollower\r\n                     }\r\n                 }\r\n             })\r\n             setShowfollow(true);  \r\n             \r\n         })\r\n     }\r\n\r\n    return(\r\n        <>\r\n        {userProfile?\r\n        \r\n        <div style={{maxWidth:\"90%\",margin:\"0 auto\"}}>\r\n            <div  style={{display:\"flex\",justifyContent:\"space-around\",margin:\"18px 0px\",borderBottom:\"1px solid grey\"}}>\r\n\r\n                <div>\r\n                    <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                    src={userProfile.user.pic}/>\r\n                </div>\r\n                <div>\r\n                    <h4>{userProfile.user.name}</h4>\r\n                    <h5>{userProfile.user.email}</h5>\r\n                    <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"109%\"}}>\r\n                        <h6>{userProfile.posts.length} posts</h6>\r\n                        <h6>{userProfile.user.followers.length} followers</h6>\r\n                        <h6>{userProfile.user.following.length} following</h6>\r\n                    </div>\r\n                    {\r\n                        showfollow?\r\n                        <button style={{margin:\"1rem\"}} onClick={()=>followUser()} className=\"btn waves-effect waves-light #42a5f5 blue darken-1\">\r\n                        Follow\r\n                        </button>\r\n                        : \r\n                        <button style={{margin:\"1rem\"}} onClick={()=>unfollowUser()} className=\"btn waves-effect waves-light #42a5f5 blue darken-1\">\r\n                        Unfollow\r\n                        </button> \r\n                    }\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n            {userProfile.posts.map(item=>{\r\n                return <img key={item._id} className=\"item card\" src={item.photo} alt={item.title} style={{maxWidth:\"33rem\",maxHeight:\"33rem\",justifyContent:\"space-between\"}}/>\r\n            })}\r\n                \r\n            </div>\r\n        </div>\r\n        :<h3>Loading..</h3>}\r\n        \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserProfile;","D:\\Cv Projects\\Insta clone\\client\\src\\components\\screens\\Subsuserposts.js",["82","83","84","85","86","87"],{"ruleId":"88","severity":1,"message":"89","line":4,"column":30,"nodeType":"90","messageId":"91","endLine":4,"endColumn":36},{"ruleId":"88","severity":1,"message":"92","line":17,"column":10,"nodeType":"90","messageId":"91","endLine":17,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":30,"column":5,"nodeType":"95","endLine":30,"endColumn":7,"suggestions":"96"},{"ruleId":"88","severity":1,"message":"97","line":7,"column":18,"nodeType":"90","messageId":"91","endLine":7,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":37,"column":28,"nodeType":"100","messageId":"101","endLine":37,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":64,"column":28,"nodeType":"100","messageId":"101","endLine":64,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":92,"column":26,"nodeType":"100","messageId":"101","endLine":92,"endColumn":28},{"ruleId":"98","severity":1,"message":"102","line":114,"column":32,"nodeType":"100","messageId":"101","endLine":114,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":126,"column":25,"nodeType":"105","endLine":126,"endColumn":49},{"ruleId":"88","severity":1,"message":"106","line":3,"column":15,"nodeType":"90","messageId":"91","endLine":3,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":66,"column":8,"nodeType":"95","endLine":66,"endColumn":15,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"104","line":79,"column":21,"nodeType":"105","endLine":80,"endColumn":54},{"ruleId":"93","severity":1,"message":"109","line":18,"column":7,"nodeType":"95","endLine":18,"endColumn":12,"suggestions":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"88","severity":1,"message":"115","line":2,"column":9,"nodeType":"90","messageId":"91","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"92","line":7,"column":12,"nodeType":"90","messageId":"91","endLine":7,"endColumn":17},{"ruleId":"93","severity":1,"message":"116","line":43,"column":7,"nodeType":"95","endLine":43,"endColumn":12,"suggestions":"117"},{"ruleId":"111","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"98","severity":1,"message":"99","line":4,"column":19,"nodeType":"100","messageId":"101","endLine":4,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":7,"column":19,"nodeType":"100","messageId":"101","endLine":7,"endColumn":21},{"ruleId":"93","severity":1,"message":"120","line":25,"column":8,"nodeType":"95","endLine":25,"endColumn":10,"suggestions":"121"},{"ruleId":"98","severity":1,"message":"102","line":71,"column":34,"nodeType":"100","messageId":"101","endLine":71,"endColumn":36},{"ruleId":"103","severity":1,"message":"104","line":94,"column":21,"nodeType":"105","endLine":95,"endColumn":49},{"ruleId":"88","severity":1,"message":"97","line":7,"column":18,"nodeType":"90","messageId":"91","endLine":7,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":37,"column":28,"nodeType":"100","messageId":"101","endLine":37,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":64,"column":28,"nodeType":"100","messageId":"101","endLine":64,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":92,"column":26,"nodeType":"100","messageId":"101","endLine":92,"endColumn":28},{"ruleId":"98","severity":1,"message":"102","line":114,"column":32,"nodeType":"100","messageId":"101","endLine":114,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":126,"column":25,"nodeType":"105","endLine":126,"endColumn":49},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useHistory' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["124"],"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["127"],["125"],["126"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["128"],{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [dispatch, history]",{"range":"139","text":"140"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"141","text":"142"},"Update the dependencies array to be: [uploadFields, url]",{"range":"143","text":"144"},"Update the dependencies array to be: [body, history, title, url]",{"range":"145","text":"146"},"Update the dependencies array to be: [userid]",{"range":"147","text":"148"},[1020,1022],"[dispatch, history]",[2140,2147],"[dispatch, image, state]",[486,491],"[uploadFields, url]",[1182,1187],"[body, history, title, url]",[771,773],"[userid]"]